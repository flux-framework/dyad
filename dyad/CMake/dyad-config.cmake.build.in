set(DYAD_FOUND TRUE)

# Include directories
set(DYAD_INCLUDE_DIRS "@CMAKE_INCLUDE_OUTPUT_DIRECTORY@")
if (NOT IS_DIRECTORY "${DYAD_INCLUDE_DIRS}")
    set(DYAD_FOUND FALSE)
endif ()
#message(STATUS "DYAD_INCLUDE_DIRS: " ${DYAD_INCLUDE_DIRS})
get_filename_component(DYAD_ROOT_DIR ${DYAD_INCLUDE_DIRS}/.. ABSOLUTE)
#message(STATUS "DYAD_ROOT_DIR: " ${DYAD_ROOT_DIR})
set(DYAD_LIBRARY_PATH "@CMAKE_LIBRARY_OUTPUT_DIRECTORY@")
#message(STATUS "DYAD_LIBRARY_PATH: " ${DYAD_LIBRARY_PATH})
link_directories(${DYAD_LIBRARY_PATH})
set(DYAD_LIBRARIES dyad)
set(DYAD_DEFINITIONS "")
add_library(dyad INTERFACE)
add_library(dyad::dyad ALIAS dyad)
target_include_directories(dyad INTERFACE ${DYAD_INCLUDE_DIRS})
target_link_libraries(dyad INTERFACE ${DYAD_LIBRARIES})
target_compile_options(dyad INTERFACE ${DYAD_DEFINITIONS})
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(dyad
            REQUIRED_VARS DYAD_FOUND DYAD_INCLUDE_DIRS DYAD_LIBRARY_PATH DYAD_LIBRARIES)