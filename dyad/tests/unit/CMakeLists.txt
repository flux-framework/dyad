if(NOT DEFINED ENV{DYAD_TEST_MACHINE})
    message(FATAL_ERROR "-- [dyad] DYAD_TEST_MACHINE in env should be set for ${PROJECT_NAME} test build")
else()
    message(STATUS "[dyad] found setting machine to $ENV{DYAD_TEST_MACHINE}")
endif()
if(NOT DEFINED ENV{DYAD_PFS_DIR})
    message(FATAL_ERROR "-- [dyad] DYAD_PFS_DIR in env should be set for ${PROJECT_NAME} paper test build")
else()
    message(STATUS "[dyad] found setting pfs dir to $ENV{DYAD_PFS_DIR}")
endif()
if(NOT DEFINED ENV{DYAD_DMD_DIR})
    message(FATAL_ERROR "-- [dyad] DYAD_DMD_DIR in env should be set for ${PROJECT_NAME} paper test build")
else()
    message(STATUS "[dyad] found setting DMD Dir to $ENV{DYAD_DMD_DIR}")
endif()
set(DYAD_KEYSPACE test_dyad)
set(DYAD_LOG_DIR ${CMAKE_BINARY_DIR}/logs)
file(MAKE_DIRECTORY ${DYAD_LOG_DIR})
find_package(Catch2 REQUIRED)
find_package(MPI REQUIRED COMPONENTS CXX)
include_directories(${CMAKE_CURRENT_SOURCE_DIR})
include_directories(Catch2::Catch2)
include_directories(${MPI_CXX_INCLUDE_DIRS})
include_directories(${DYAD_PROJECT_DIR}/src)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
include_directories(${CMAKE_BINARY_DIR}/include)
set(TEST_LIBS Catch2::Catch2 -lstdc++fs ${MPI_CXX_LIBRARIES} -rdynamic dyad_core dyad_ctx dyad_utils flux-core ${CPP_LOGGER_LIBRARIES})
set(TEST_SRC ${CMAKE_CURRENT_SOURCE_DIR}/catch_config.h ${CMAKE_CURRENT_SOURCE_DIR}/mpi_console_reporter.cpp ${CMAKE_CURRENT_SOURCE_DIR}/mpi_console_reporter.hpp ${CMAKE_CURRENT_SOURCE_DIR}/test_utils.h)
add_executable(unit_test unit_test.cpp ${TEST_SRC} )
target_link_libraries(unit_test ${TEST_LIBS})
add_dependencies(unit_test dyad)

add_subdirectory(script)
add_subdirectory(data_plane)
add_subdirectory(mdm)
add_subdirectory(dyad_core)